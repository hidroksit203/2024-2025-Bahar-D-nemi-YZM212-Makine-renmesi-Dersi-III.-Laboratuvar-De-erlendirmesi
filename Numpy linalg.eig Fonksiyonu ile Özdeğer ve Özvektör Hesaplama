Numpy linalg.eig Fonksiyonu ile Özdeğer ve Özvektör Hesaplama
Fonksiyonun Amacı
numpy.linalg.eig fonksiyonu, bir karesel matrisin özdeğerlerini ve özvektörlerini hesaplamak için kullanılır. Bu işlem, matrisin eigen decomposition (öz ayrışım) işlemidir. Fonksiyon şu matematiksel denklemi temel alır:

A⋅v=λ⋅v

Burada:
A giriş karesel matristir,
λ özdeğer,
v ise özvektördür.

import numpy as np

A = np.array([[4, -2],
              [1,  1]])

eigenvalues, eigenvectors = np.linalg.eig(A)

eigenvalues: Özdeğerleri döner (1D array)

eigenvectors: Sütunları özvektörler olan bir matristir (2D array)

Fonksiyonun Detayları (Dokümantasyon Özeti)
Giriş: Karesel bir 2D NumPy array (a).

Dönüş değeri: (w, v):

w: Özdeğerler

v: Normalleştirilmiş özvektörler (her sütun bir özvektördür)

Kaynak: https://numpy.org/doc/2.1/reference/generated/numpy.linalg.eig.html

Arkada Çalışan Yapı ve Kaynak Kod
np.linalg.eig fonksiyonu, NumPy’ın düşük seviyeli LAPACK (Linear Algebra Package) arayüzlerini kullanan C ve Fortran kütüphanelerine dayanır. NumPy doğrudan bu LAPACK fonksiyonlarını numpy/linalg klasörü altında sarmalayarak kullanıcılara yüksek seviyeli bir API sunar.

Kod yapısı genel olarak şöyledir:

eig fonksiyonu, numpy/linalg/linalg.py dosyunda tanımlıdır.

İçeride _umath_linalg üzerinden geev isimli LAPACK fonksiyonu çağrılır.

geev, hem özdeğerleri hem de sol ve sağ özvektörleri döndürebilir.

Kaynak:
https://github.com/numpy/numpy/blob/main/numpy/linalg/linalg.py
(Erişim: 7 Nisan 2025)

Arka Plan Süreci
Matrisin türü kontrol edilir.

Gerekirse matris dönüştürülür (örneğin kompleks türüne).

LAPACK arayüzü üzerinden geev fonksiyonu çağrılır.

Dönen sonuçlar Python objelerine dönüştürülerek kullanıcıya sunulur.

Örnek Uygulama:

import numpy as np

A = np.array([[3, 1],
              [0, 2]])

vals, vecs = np.linalg.eig(A)

print("Özdeğerler:", vals)
print("Özvektörler:\n", vecs)

Çıktı:
Özdeğerler: [3. 2.]
Özvektörler:
[[ 1.          0.70710678]
 [ 0.          0.70710678]]

